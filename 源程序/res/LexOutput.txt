                                 TOKEN STREAM
-------------------------------------------------------------------
Line	Content			Type
2	int			[INT]
2	program			[ID]
2	(			[LPAREN]
2	int			[INT]
2	a			[ID]
2	,			[COMMA]
2	int			[INT]
2	b			[ID]
2	,			[COMMA]
2	int			[INT]
2	c			[ID]
2	)			[RPAREN]
3	{			[LBBRACKET]
4	int			[INT]
4	i			[ID]
4	;			[SEMI]
5	int			[INT]
5	j			[ID]
5	;			[SEMI]
6	i			[ID]
6	=			[ASSIGN]
6	0			[NUM]
6	;			[SEMI]
7	if			[IF]
7	(			[LPAREN]
7	a			[ID]
7	>			[GT]
7	(			[LPAREN]
7	b			[ID]
7	+			[PLUS]
7	c			[ID]
7	)			[RPAREN]
7	)			[RPAREN]
8	{			[LBBRACKET]
9	j			[ID]
9	=			[ASSIGN]
9	a			[ID]
9	+			[PLUS]
9	(			[LPAREN]
9	b			[ID]
9	*			[MUL]
9	c			[ID]
9	+			[PLUS]
9	1			[NUM]
9	)			[RPAREN]
9	;			[SEMI]
10	}			[RBBRACKET]
11	else			[ELSE]
12	{			[LBBRACKET]
13	j			[ID]
13	=			[ASSIGN]
13	a			[ID]
13	;			[SEMI]
14	}			[RBBRACKET]
15	while			[WHILE]
15	(			[LPAREN]
15	i			[ID]
15	<=			[LE]
15	100			[NUM]
15	)			[RPAREN]
16	{			[LBBRACKET]
17	j			[ID]
17	=			[ASSIGN]
17	j			[ID]
17	*			[MUL]
17	2			[NUM]
17	;			[SEMI]
18	i			[ID]
18	=			[ASSIGN]
18	j			[ID]
18	;			[SEMI]
19	}			[RBBRACKET]
20	return			[RETURN]
20	i			[ID]
20	;			[SEMI]
21	}			[RBBRACKET]
23	int			[INT]
23	demo			[ID]
23	(			[LPAREN]
23	int			[INT]
23	a			[ID]
23	)			[RPAREN]
24	{			[LBBRACKET]
25	a			[ID]
25	=			[ASSIGN]
25	a			[ID]
25	+			[PLUS]
25	2			[NUM]
25	;			[SEMI]
26	return			[RETURN]
26	a			[ID]
26	*			[MUL]
26	2			[NUM]
26	;			[SEMI]
27	}			[RBBRACKET]
29	int			[INT]
29	main			[ID]
29	(			[LPAREN]
29	)			[RPAREN]
30	{			[LBBRACKET]
31	int			[INT]
31	a			[ID]
31	[			[LeftSquareBracket]
31	2			[NUM]
31	]			[RightSquareBracket]
31	[			[LeftSquareBracket]
31	2			[NUM]
31	]			[RightSquareBracket]
31	;			[SEMI]
32	a			[ID]
32	[			[LeftSquareBracket]
32	0			[NUM]
32	]			[RightSquareBracket]
32	[			[LeftSquareBracket]
32	0			[NUM]
32	]			[RightSquareBracket]
32	=			[ASSIGN]
32	3			[NUM]
32	;			[SEMI]
33	a			[ID]
33	[			[LeftSquareBracket]
33	0			[NUM]
33	]			[RightSquareBracket]
33	[			[LeftSquareBracket]
33	1			[NUM]
33	]			[RightSquareBracket]
33	=			[ASSIGN]
33	a			[ID]
33	[			[LeftSquareBracket]
33	0			[NUM]
33	]			[RightSquareBracket]
33	[			[LeftSquareBracket]
33	0			[NUM]
33	]			[RightSquareBracket]
33	+			[PLUS]
33	1			[NUM]
33	;			[SEMI]
34	a			[ID]
34	[			[LeftSquareBracket]
34	1			[NUM]
34	]			[RightSquareBracket]
34	[			[LeftSquareBracket]
34	0			[NUM]
34	]			[RightSquareBracket]
34	=			[ASSIGN]
34	a			[ID]
34	[			[LeftSquareBracket]
34	0			[NUM]
34	]			[RightSquareBracket]
34	[			[LeftSquareBracket]
34	1			[NUM]
34	]			[RightSquareBracket]
34	+			[PLUS]
34	1			[NUM]
34	;			[SEMI]
35	a			[ID]
35	[			[LeftSquareBracket]
35	1			[NUM]
35	]			[RightSquareBracket]
35	[			[LeftSquareBracket]
35	1			[NUM]
35	]			[RightSquareBracket]
35	=			[ASSIGN]
35	program			[ID]
35	(			[LPAREN]
35	a			[ID]
35	[			[LeftSquareBracket]
35	0			[NUM]
35	]			[RightSquareBracket]
35	[			[LeftSquareBracket]
35	0			[NUM]
35	]			[RightSquareBracket]
35	,			[COMMA]
35	a			[ID]
35	[			[LeftSquareBracket]
35	0			[NUM]
35	]			[RightSquareBracket]
35	[			[LeftSquareBracket]
35	1			[NUM]
35	]			[RightSquareBracket]
35	,			[COMMA]
35	demo			[ID]
35	(			[LPAREN]
35	a			[ID]
35	[			[LeftSquareBracket]
35	1			[NUM]
35	]			[RightSquareBracket]
35	[			[LeftSquareBracket]
35	0			[NUM]
35	]			[RightSquareBracket]
35	)			[RPAREN]
35	)			[RPAREN]
35	;			[SEMI]
37	return			[RETURN]
37	a			[ID]
37	[			[LeftSquareBracket]
37	1			[NUM]
37	]			[RightSquareBracket]
37	[			[LeftSquareBracket]
37	1			[NUM]
37	]			[RightSquareBracket]
37	;			[SEMI]
38	}			[RBBRACKET]
