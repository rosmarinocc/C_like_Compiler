                                 TOKEN STREAM
-------------------------------------------------------------------
Line	Content			Type
3	int			[INT]
3	program			[ID]
3	(			[LPAREN]
3	int			[INT]
3	a			[ID]
3	,			[COMMA]
3	int			[INT]
3	b			[ID]
3	,			[COMMA]
3	int			[INT]
3	c			[ID]
3	)			[RPAREN]
4	{			[LBBRACKET]
5	int			[INT]
5	i			[ID]
5	;			[SEMI]
6	int			[INT]
6	j			[ID]
6	;			[SEMI]
7	i			[ID]
7	=			[ASSIGN]
7	0			[NUM]
7	;			[SEMI]
8	if			[IF]
8	(			[LPAREN]
8	a			[ID]
8	>			[GT]
8	(			[LPAREN]
8	b			[ID]
8	+			[PLUS]
8	c			[ID]
8	)			[RPAREN]
8	)			[RPAREN]
9	{			[LBBRACKET]
10	j			[ID]
10	=			[ASSIGN]
10	a			[ID]
10	+			[PLUS]
10	(			[LPAREN]
10	b			[ID]
10	*			[MUL]
10	c			[ID]
10	+			[PLUS]
10	1			[NUM]
10	)			[RPAREN]
10	;			[SEMI]
11	}			[RBBRACKET]
12	else			[ELSE]
13	{			[LBBRACKET]
14	j			[ID]
14	=			[ASSIGN]
14	a			[ID]
14	;			[SEMI]
15	}			[RBBRACKET]
16	while			[WHILE]
16	(			[LPAREN]
16	i			[ID]
16	<=			[LE]
16	100			[NUM]
16	)			[RPAREN]
17	{			[LBBRACKET]
18	j			[ID]
18	=			[ASSIGN]
18	j			[ID]
18	*			[MUL]
18	2			[NUM]
18	;			[SEMI]
19	i			[ID]
19	=			[ASSIGN]
19	j			[ID]
19	;			[SEMI]
20	}			[RBBRACKET]
21	return			[RETURN]
21	i			[ID]
21	;			[SEMI]
22	}			[RBBRACKET]
24	int			[INT]
24	demo			[ID]
24	(			[LPAREN]
24	int			[INT]
24	a			[ID]
24	)			[RPAREN]
25	{			[LBBRACKET]
26	a			[ID]
26	=			[ASSIGN]
26	a			[ID]
26	+			[PLUS]
26	2			[NUM]
26	;			[SEMI]
27	return			[RETURN]
27	a			[ID]
27	*			[MUL]
27	2			[NUM]
27	;			[SEMI]
28	}			[RBBRACKET]
30	int			[INT]
30	main			[ID]
30	(			[LPAREN]
30	)			[RPAREN]
31	{			[LBBRACKET]
32	int			[INT]
32	a			[ID]
32	[			[LeftSquareBracket]
32	2			[NUM]
32	]			[RightSquareBracket]
32	[			[LeftSquareBracket]
32	2			[NUM]
32	]			[RightSquareBracket]
32	;			[SEMI]
33	a			[ID]
33	[			[LeftSquareBracket]
33	0			[NUM]
33	]			[RightSquareBracket]
33	[			[LeftSquareBracket]
33	0			[NUM]
33	]			[RightSquareBracket]
33	=			[ASSIGN]
33	3			[NUM]
33	;			[SEMI]
34	a			[ID]
34	[			[LeftSquareBracket]
34	0			[NUM]
34	]			[RightSquareBracket]
34	[			[LeftSquareBracket]
34	1			[NUM]
34	]			[RightSquareBracket]
34	=			[ASSIGN]
34	a			[ID]
34	[			[LeftSquareBracket]
34	0			[NUM]
34	]			[RightSquareBracket]
34	[			[LeftSquareBracket]
34	0			[NUM]
34	]			[RightSquareBracket]
34	+			[PLUS]
34	1			[NUM]
34	;			[SEMI]
35	a			[ID]
35	[			[LeftSquareBracket]
35	1			[NUM]
35	]			[RightSquareBracket]
35	[			[LeftSquareBracket]
35	0			[NUM]
35	]			[RightSquareBracket]
35	=			[ASSIGN]
35	a			[ID]
35	[			[LeftSquareBracket]
35	0			[NUM]
35	]			[RightSquareBracket]
35	[			[LeftSquareBracket]
35	1			[NUM]
35	]			[RightSquareBracket]
35	+			[PLUS]
35	1			[NUM]
35	;			[SEMI]
36	a			[ID]
36	[			[LeftSquareBracket]
36	1			[NUM]
36	]			[RightSquareBracket]
36	[			[LeftSquareBracket]
36	1			[NUM]
36	]			[RightSquareBracket]
36	=			[ASSIGN]
36	program			[ID]
36	(			[LPAREN]
36	a			[ID]
36	[			[LeftSquareBracket]
36	0			[NUM]
36	]			[RightSquareBracket]
36	[			[LeftSquareBracket]
36	0			[NUM]
36	]			[RightSquareBracket]
36	,			[COMMA]
36	a			[ID]
36	[			[LeftSquareBracket]
36	0			[NUM]
36	]			[RightSquareBracket]
36	[			[LeftSquareBracket]
36	1			[NUM]
36	]			[RightSquareBracket]
36	,			[COMMA]
36	demo			[ID]
36	(			[LPAREN]
36	a			[ID]
36	[			[LeftSquareBracket]
36	1			[NUM]
36	]			[RightSquareBracket]
36	[			[LeftSquareBracket]
36	0			[NUM]
36	]			[RightSquareBracket]
36	)			[RPAREN]
36	)			[RPAREN]
36	;			[SEMI]
38	return			[RETURN]
38	a			[ID]
38	[			[LeftSquareBracket]
38	1			[NUM]
38	]			[RightSquareBracket]
38	[			[LeftSquareBracket]
38	1			[NUM]
38	]			[RightSquareBracket]
38	;			[SEMI]
39	}			[RBBRACKET]
